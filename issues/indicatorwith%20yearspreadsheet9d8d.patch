Index: src/main/java/org/sigmah/client/page/project/pivot/LayoutComposer.java
===================================================================
--- src/main/java/org/sigmah/client/page/project/pivot/LayoutComposer.java	(revision 1596)
+++ src/main/java/org/sigmah/client/page/project/pivot/LayoutComposer.java	(working copy)
@@ -59,8 +59,27 @@
 		pivot.addRowDimensions(adminDimensions);
 		pivot.addRowDimension(new Dimension(DimensionType.Site));
 		
+		
+		pivot.addColDimension(new DateDimension(DateUnit.MONTH));
 		//pivot.addColDimension(new DateDimension(DateUnit.YEAR));
+		
+		Filter filter = new Filter();
+		filter.addRestriction(DimensionType.Database, databaseId);
+		filter.addRestriction(DimensionType.Indicator, indicatorId );
+		filter.setDateRange(projectDateRange);
+		pivot.setFilter(filter);
+		return pivot;
+	}
+	public PivotTableElement YearExcel(int indicatorId) {
+		PivotTableElement pivot = new PivotTableElement();
+		pivot.setShowEmptyCells(true);
+
+		pivot.addRowDimensions(adminDimensions);
+		pivot.addRowDimension(new Dimension(DimensionType.Site));
+		
+		
 		pivot.addColDimension(new DateDimension(DateUnit.MONTH));
+		pivot.addColDimension(new DateDimension(DateUnit.YEAR));
 		
 		Filter filter = new Filter();
 		filter.addRestriction(DimensionType.Database, databaseId);
Index: src/main/java/org/sigmah/server/endpoint/export/sigmah/spreadsheet/data/SpreadsheetDataUtil.java
===================================================================
--- src/main/java/org/sigmah/server/endpoint/export/sigmah/spreadsheet/data/SpreadsheetDataUtil.java	(revision 1596)
+++ src/main/java/org/sigmah/server/endpoint/export/sigmah/spreadsheet/data/SpreadsheetDataUtil.java	(working copy)
@@ -77,8 +77,15 @@
 			commands.clear();
 			commands.add(new GenerateElement<PivotContent>(pivot));
 			final PivotContent content=(PivotContent)exporter.executeCommands(commands);           
-			data.getEntryMap().put(indicator.getId(), content.getData());			
+			data.getEntryMap().put(indicator.getId(), content.getData());
+			final PivotTableElement pivotyear = composer.YearExcel(indicator.getId());
+			commands.clear();
+			commands.add(new GenerateElement<PivotContent>(pivotyear));
+			final PivotContent contentyear=(PivotContent)exporter.executeCommands(commands);           
+			data.getEntryMap().put(indicator.getId()+1, contentyear.getData());
+			
         }
+        
       
         //put ungrouped indicators
         final IndicatorGroup nonGroup=new IndicatorGroup(exporter.localize("unGrouped"));
Index: src/main/java/org/sigmah/server/endpoint/export/sigmah/spreadsheet/template/IndicatorEntryCalcTemplate.java
===================================================================
--- src/main/java/org/sigmah/server/endpoint/export/sigmah/spreadsheet/template/IndicatorEntryCalcTemplate.java	(revision 1596)
+++ src/main/java/org/sigmah/server/endpoint/export/sigmah/spreadsheet/template/IndicatorEntryCalcTemplate.java	(working copy)
@@ -123,6 +123,8 @@
  		
 		List<PivotTableData.Axis> leaves= 
 			data.getEntryMap().get(indicator.getId()).getRootColumn().getLeaves();
+		final List<PivotTableData.Axis> leavesyear= 
+				data.getEntryMap().get(indicator.getId()+1).getRootColumn().getLeaves();
 		int numbOfLeaves=leaves.size();
 		int numbOfCols=4;
 		 
@@ -217,16 +219,63 @@
 		row.getCellByIndex(4).setCellStyleName(null);
 		
  		//data entry
+		//for year row in sheet
+				String merge="hello";
+				row = tableEx.getRowByIndex(++rowIndex);
+				int cellIndex = 0;
+				CalcUtils.putHeader(row,++cellIndex,  "Year");
+		 		Map<String, Integer> columnIndexMapyr=new HashMap<String, Integer>();
+				for(PivotTableData.Axis axis:leavesyear){
+					CalcUtils.putHeader(row,++cellIndex,  axis.getLabel());		
+					columnIndexMapyr.put(axis.getLabel(),cellIndex);
+					if(merge.equals(axis.getLabel())&&cellIndex>2){	
+						CalcUtils.mergeCell(tableEx, cellIndex-1, rowIndex,cellIndex, rowIndex);
+						}
+					else{		
+					}
+					merge=axis.getLabel();
+					
+					
+				}
+		int month=0;
+		String completedate="hello";
 		//header
  		row = tableEx.getRowByIndex(++rowIndex);
-		int cellIndex = 0;
-		CalcUtils.putHeader(row,++cellIndex,  data.getLocalizedVersion("sideAndMonth"));
+		cellIndex = 0;
+		CalcUtils.putHeader(row,++cellIndex,  "Month");
  		Map<String, Integer> columnIndexMap=new HashMap<String, Integer>();
 		for(PivotTableData.Axis axis:leaves){
 			CalcUtils.putHeader(row,++cellIndex,  axis.getLabel());
 			columnIndexMap.put(axis.getLabel(),cellIndex);
+			if(cellIndex==2){
+				completedate=axis.getLabel();
+			}
 		}
-		
+		//for date value
+		if(completedate.equals("Jan")){month=1;}
+		else if(completedate.equals("Feb")){month=2;}
+		else if(completedate.equals("Mar")){month=3;}
+		else if(completedate.equals("Apr")){month=4;}
+		else if(completedate.equals("May")){month=5;}
+		else if(completedate.equals("Jun")){month=6;}
+		else if(completedate.equals("Jul")){month=7;}
+		else if(completedate.equals("Aug")){month=8;}
+		else if(completedate.equals("Sep")){month=9;}
+		else if(completedate.equals("Oct")){month=10;}
+		else if(completedate.equals("Nov")){month=11;}
+		else{month=12;}		
+		//for year row in sheet
+				row = tableEx.getRowByIndex(++rowIndex);
+				cellIndex = 0;
+				CalcUtils.putHeader(row,++cellIndex,  "Site");
+		 		Map<String, Integer> columnIndexMapcompletedate=new HashMap<String, Integer>();
+				for(PivotTableData.Axis axis:leavesyear){	
+					CalcUtils.putHeader(row,++cellIndex, month+"."+ axis.getLabel());
+					columnIndexMapcompletedate.put(axis.getLabel(),cellIndex);
+					if(month==12){
+						month=1;
+					}else{month++;}
+						}
 		//rows	
   		for(PivotTableData.Axis axis : data.getEntryMap().get(indicator.getId()).getRootRow().getChildren()) {
  			row = tableEx.getRowByIndex(++rowIndex);
@@ -255,7 +304,7 @@
  		tableEx.getColumnByIndex(1).setWidth(60);
 		for(int i=2;i<2+numbOfLeaves;i++){
  			tableEx.getColumnByIndex(i).setWidth(30);
-		}			 
+		}	
 	} 
 	
 	private void putValueCell(Table table,int rowIndex, 
Index: src/main/java/org/sigmah/server/endpoint/export/sigmah/spreadsheet/template/IndicatorEntryExcelTemplate.java
===================================================================
--- src/main/java/org/sigmah/server/endpoint/export/sigmah/spreadsheet/template/IndicatorEntryExcelTemplate.java	(revision 1596)
+++ src/main/java/org/sigmah/server/endpoint/export/sigmah/spreadsheet/template/IndicatorEntryExcelTemplate.java	(working copy)
@@ -15,6 +15,7 @@
 import org.apache.poi.hssf.usermodel.HSSFWorkbook;
 import org.apache.poi.ss.usermodel.CellStyle;
 import org.apache.poi.ss.util.CellRangeAddress;
+import org.sigmah.server.endpoint.export.sigmah.spreadsheet.CalcUtils;
 import org.sigmah.server.endpoint.export.sigmah.spreadsheet.ExcelUtils;
 import org.sigmah.server.endpoint.export.sigmah.spreadsheet.ExportConstants;
 import org.sigmah.server.endpoint.export.sigmah.spreadsheet.ExportConstants.MultiItemText;
@@ -113,6 +114,10 @@
  		
 		final List<PivotTableData.Axis> leaves= 
 			data.getEntryMap().get(indicator.getId()).getRootColumn().getLeaves();
+		
+		final List<PivotTableData.Axis> leavesyear= 
+				data.getEntryMap().get(indicator.getId()+1).getRootColumn().getLeaves();
+		
 		int numbOfLeaves=leaves.size();
 		int numbOfCols=4;
 		 
@@ -209,16 +214,74 @@
 				1, numbOfCols));
 		
  		//data entry
+		//for year above months in indicators
+		int startval=2;
+		int endval=0;
+		String merge="hello";
+				row = sheetEx.createRow(++rowIndex);
+				row.setHeightInPoints(defHeight);
+				int cellIndex = 0;
+				utils.putHeader(row,++cellIndex, "Year");
+				Map<String, Integer> columnIndexMapyr=new HashMap<String, Integer>();
+				for(PivotTableData.Axis axis:leavesyear){
+					utils.putHeader(row,++cellIndex, axis.getLabel());
+					columnIndexMapyr.put(axis.getLabel(),cellIndex);
+					if(cellIndex>3){
+					if(merge.equals(axis.getLabel())){
+						
+					}
+					else{
+						endval=cellIndex-1;
+						sheetEx.addMergedRegion(new CellRangeAddress(rowIndex, rowIndex, startval, endval));
+						startval=cellIndex;
+					}
+					}
+					sheetEx.addMergedRegion(new CellRangeAddress(rowIndex, rowIndex, startval, cellIndex));
+					merge=axis.getLabel();
+					
+				}
 		//header
+				int month=0;
+				String completedate="hello";
  		row = sheetEx.createRow(++rowIndex);
 		row.setHeightInPoints(defHeight);
-		int cellIndex = 0;
-		utils.putHeader(row,++cellIndex, data.getLocalizedVersion("sideAndMonth"));
+		cellIndex = 0;
+		utils.putHeader(row,++cellIndex, "month");
 		Map<String, Integer> columnIndexMap=new HashMap<String, Integer>();
 		for(PivotTableData.Axis axis:leaves){
 			utils.putHeader(row,++cellIndex, axis.getLabel());
 			columnIndexMap.put(axis.getLabel(),cellIndex);
+			if(cellIndex==2){
+				completedate=axis.getLabel();
+			}
 		}
+		if(completedate.equals("Jan")){month=1;}
+		else if(completedate.equals("Feb")){month=2;}
+		else if(completedate.equals("Mar")){month=3;}
+		else if(completedate.equals("Apr")){month=4;}
+		else if(completedate.equals("May")){month=5;}
+		else if(completedate.equals("Jun")){month=6;}
+		else if(completedate.equals("Jul")){month=7;}
+		else if(completedate.equals("Aug")){month=8;}
+		else if(completedate.equals("Sep")){month=9;}
+		else if(completedate.equals("Oct")){month=10;}
+		else if(completedate.equals("Nov")){month=11;}
+		else{month=12;}		
+		
+		
+		//for year row in sheet
+		row = sheetEx.createRow(++rowIndex);
+		row.setHeightInPoints(defHeight);
+		cellIndex = 0;
+		utils.putHeader(row,++cellIndex,  "Site");
+ 		Map<String, Integer> columnIndexMapcompletedate=new HashMap<String, Integer>();
+		for(PivotTableData.Axis axis:leavesyear){	
+			utils.putHeader(row,++cellIndex, month+"."+ axis.getLabel());
+			columnIndexMapcompletedate.put(axis.getLabel(),cellIndex);
+			if(month==12){
+				month=1;
+			}else{month++;}
+				}
 		
 		//rows	
   		for(PivotTableData.Axis axis : data.getEntryMap().get(indicator.getId()).getRootRow().getChildren()) {
