Index: /src/main/java/org/sigmah/shared/dto/UserDTO.java
===================================================================
--- /src/main/java/org/sigmah/shared/dto/UserDTO.java	(Revision 1564)
+++ /src/main/java/org/sigmah/shared/dto/UserDTO.java	Fri May 16 00:38:24 2014
@@ -63,6 +63,14 @@
     	set("locale", locale);
     }
     
+    public String getProjectPreference() {
+    	return get("projectPref");
+    }
+    
+    public void setProjectPreference(String projectPref) {
+    	set("projectPref", projectPref);
+    }
+    
     public OrgUnitDTO getOrgUnitWithProfiles() {
         return get("orgUnit");
     }

Index: /src/main/java/org/sigmah/shared/domain/User.java
===================================================================
--- /src/main/java/org/sigmah/shared/domain/User.java	(Revision 1564)
+++ /src/main/java/org/sigmah/shared/domain/User.java	Thu May 15 23:54:55 2014
@@ -33,6 +33,7 @@
     private String name;
     private boolean newUser;
     private String locale;
+    private String projectPref;
     private String changePasswordKey;
     private Date dateChangePasswordKeyIssued;
     private String hashedPassword;
@@ -98,7 +99,7 @@
     public void setLocale(String locale) {
         this.locale = locale;
     }
-
+    
     /**
      * Gets the user's password, hashed with the BCrypt algorithm.
      * 
@@ -139,6 +140,15 @@
 
     public Boolean isActive() {
         return isActive;
+    }
+    
+    @Column(name = "ProjectPref", nullable = false, length = 10)
+    public String getProjectPreference() {
+        return this.projectPref;
+    }
+
+    public void setProjectPreference(String projectPref) {
+        this.projectPref = projectPref;
     }
 
     /**


Index: /src/main/java/org/sigmah/client/page/admin/users/form/UserSigmahForm.java
===================================================================
--- /src/main/java/org/sigmah/client/page/admin/users/form/UserSigmahForm.java	(Revision 1564)
+++ /src/main/java/org/sigmah/client/page/admin/users/form/UserSigmahForm.java	Thu May 15 23:55:16 2014
@@ -24,6 +24,7 @@
 import org.sigmah.shared.dto.UserDTO;
 import org.sigmah.shared.dto.profile.ProfileDTO;
 import org.sigmah.shared.dto.profile.ProfileDTOLight;
+import com.allen_sauer.gwt.log.client.Log;
 
 import com.extjs.gxt.ui.client.Style.Scroll;
 import com.extjs.gxt.ui.client.event.ButtonEvent;
@@ -68,6 +69,7 @@
 	private final SimpleComboBox<String> localeField;
 	private final ComboBox<OrgUnitDTOLight> orgUnitsList;
 	private final ListStore<OrgUnitDTOLight> orgUnitsStore;
+	private final SimpleComboBox<String> projectPreferenceField;
 	private final ComboBox<ProfileDTOLight> profilesListCombo;
 	private final Map<Integer, ClickableLabel> selectedProfiles = new HashMap<Integer, ClickableLabel>();
 	private final List<Integer> selectedProfilesIds = new ArrayList<Integer>();
@@ -76,7 +78,7 @@
 	private HashMap<String, Object> newUserProperties;
 	private int num = 0;
 
-	private final static int LABEL_WIDTH = 90;
+	private final static int LABEL_WIDTH = 170;
 	private final static int MAX_PROFILES_TENTATIVES_PER_USER = 100;
 	private final static String ID_PROFILE = "idProfile";
 
@@ -224,6 +226,7 @@
 			// orgUnitsList.setEmptyText(userToUpdate.getOrgUnitWithProfiles().getFullName());
 		} else
 			orgUnitsList.setEmptyText(I18N.CONSTANTS.adminUserCreationOrgUnitChoice());
+		
 		orgUnitsStore = new ListStore<OrgUnitDTOLight>();
 		orgUnitsList.setStore(orgUnitsStore);
 		cache.getOrganizationCache().get(new AsyncCallback<OrgUnitDTOLight>() {
@@ -242,7 +245,31 @@
 			}
 		});
 		add(orgUnitsList);
+		
+		/* User preference for default dashboard project type */
+		
+		projectPreferenceField = new SimpleComboBox<String>();
+		projectPreferenceField.add(I18N.CONSTANTS.createProjectTypeFunding2());
+		projectPreferenceField.add(I18N.CONSTANTS.createProjectTypePartner2());
+		projectPreferenceField.add(I18N.CONSTANTS.createProjectTypeNGO2());
+		projectPreferenceField.setFieldLabel(constants.adminUsersProjectPreference());
+		projectPreferenceField.setTriggerAction(TriggerAction.ALL);
+		projectPreferenceField.setAllowBlank(false);
+		if (userToUpdate != null && userToUpdate.getProjectPreference() != null){
+			if (userToUpdate.getProjectPreference().equals("fnd")) {
+				projectPreferenceField.setSimpleValue(I18N.CONSTANTS.createProjectTypeFunding2());
+			} else if (userToUpdate.getProjectPreference().equals("lcl")) {
+				projectPreferenceField.setSimpleValue(I18N.CONSTANTS.createProjectTypePartner2());
+			} else {
+				projectPreferenceField.setSimpleValue(I18N.CONSTANTS.createProjectTypeNGO2());
+			}
+		} else {
+			// In-house project (NGO) displayed by default
+			projectPreferenceField.setSimpleValue(I18N.CONSTANTS.createProjectTypeNGO2());
+		}
+		add(projectPreferenceField);
 
+		
 		/*
 		 * *****************************************************************Profiles
 		 * ********************************
@@ -399,6 +426,17 @@
 			}
 		}
 
+		String projectPref = null;
+		if (projectPreferenceField.getSimpleValue() != null) {
+			if (projectPreferenceField.getSimpleValue().equals(I18N.CONSTANTS.createProjectTypeFunding2())) {
+				projectPref = "fnd";
+			} else if (projectPreferenceField.getSimpleValue().equals(I18N.CONSTANTS.createProjectTypePartner2())) {
+				projectPref = "lcl";
+			} else {
+				projectPref = "ngo";
+			}
+		}
+		
 		final int orgUnit = orgUnitsList.getValue().getId();
 		final List<Integer> profiles = selectedProfilesIds;
 
@@ -418,6 +456,8 @@
 		newUserProperties.put("locale", locale);
 		newUserProperties.put("orgUnit", orgUnit);
 		newUserProperties.put("profiles", profiles);
+		newUserProperties.put("projectPref", projectPref);
+
 
 		dispatcher.execute(new CreateEntity("User", newUserProperties), null, new AsyncCallback<CreateResult>() {


Index: /src/main/java/org/sigmah/client/page/admin/users/AdminUsersView.java
===================================================================
--- /src/main/java/org/sigmah/client/page/admin/users/AdminUsersView.java	(Revision 1564)
+++ /src/main/java/org/sigmah/client/page/admin/users/AdminUsersView.java	Fri May 16 16:27:17 2014
@@ -439,6 +439,9 @@
 
 		column = new ColumnConfig("locale", I18N.CONSTANTS.adminUsersLocale(), 50);
 		configs.add(column);
+		
+		column = new ColumnConfig("projectPref", I18N.CONSTANTS.adminUsersProjectPreference(), 50);
+		configs.add(column);
 
 		column = new ColumnConfig("orgUnit", I18N.CONSTANTS.adminUsersOrgUnit(), 110);
 		column.setRenderer(new GridCellRenderer<UserDTO>() {



Index: /src/main/java/org/sigmah/server/policy/UserPolicy.java
===================================================================
--- /src/main/java/org/sigmah/server/policy/UserPolicy.java	(Revision 1564)
+++ /src/main/java/org/sigmah/server/policy/UserPolicy.java	Fri May 16 00:27:58 2014
@@ -78,6 +78,7 @@
         String firstName = properties.get("firstName");
         String locale = properties.get("locale");
         String password = properties.get("pwd");
+        String projectPref = properties.get("projectPref");
         int orgUnitId = (Integer) properties.get("orgUnit");
         List<Integer> profilesIds = properties.get("profiles");
 
@@ -93,6 +94,7 @@
             userToPersist = UserDAOImpl.createNewUser(email, name, locale);
             userToPersist.setFirstName(firstName);
             userToPersist.setOrganization(executingUser.getOrganization());
+            userToPersist.setProjectPreference(projectPref);
 
             if (password != null && !password.isEmpty()) {
                 userToPersist.setHashedPassword(PasswordHelper.hashPassword(password));


Index: /src/main/java/org/sigmah/client/page/dashboard/ProjectsListPanel.java
===================================================================
--- /src/main/java/org/sigmah/client/page/dashboard/ProjectsListPanel.java	(Revision 1564)
+++ /src/main/java/org/sigmah/client/page/dashboard/ProjectsListPanel.java	Wed May 21 23:55:42 2014
@@ -25,10 +25,12 @@
 import org.sigmah.client.util.NumberUtils;
 import org.sigmah.shared.command.GetCategories;
 import org.sigmah.shared.command.GetProjects;
+import org.sigmah.shared.command.GetUsersByOrganization;
 import org.sigmah.shared.command.UpdateProjectFavorite;
 import org.sigmah.shared.command.result.CategoriesListResult;
 import org.sigmah.shared.command.result.CreateResult;
 import org.sigmah.shared.command.result.ProjectListResult;
+import org.sigmah.shared.command.result.UserListResult;
 import org.sigmah.shared.domain.ProjectModelType;
 import org.sigmah.shared.domain.element.BudgetSubFieldType;
 import org.sigmah.shared.domain.profile.GlobalPermissionEnum;
@@ -251,7 +253,6 @@
 
         // Default filters parameters.
         orgUnitsIds = new ArrayList<Integer>();
-        currentModelType = ProjectModelType.NGO;
 
         // Store.
         final ProjectStore projectStore = new ProjectStore();
@@ -419,10 +420,9 @@
         // Top panel
         final RadioGroup group = new RadioGroup("projectTypeFilter");
         group.setFireChangeEventOnSetValue(true);
-
+ 
         ngoRadio = new Radio();
         ngoRadio.setFireChangeEventOnSetValue(true);
-        ngoRadio.setValue(true);
         ngoRadio.setFieldLabel(ProjectModelType.getName(ProjectModelType.NGO));
         ngoRadio.addStyleName("toolbar-radio");
 
@@ -486,6 +486,39 @@
                 partnerRadio.setValue(true);
             }
         });
+        
+        // Display projects of type preferred by user on startup
+        // Set filters and tick radios
+        ngoRadio.setValue(false);
+        fundingRadio.setValue(false);
+        partnerRadio.setValue(false);
+        
+        GetUsersByOrganization cmd = new GetUsersByOrganization(
+        		authentication.getOrganizationId(), authentication.getUserId());
+		dispatcher.execute(cmd, null, new AsyncCallback<UserListResult>() {
+
+			@Override
+			public void onFailure(Throwable caught) {
+				// Default settings
+	        	ngoRadio.setValue(true);
+	            currentModelType = ProjectModelType.NGO;
+			}
+
+			@Override
+			public void onSuccess(UserListResult result) {
+				UserDTO authenticatedUser = result.getList().get(0);
+		        if (authenticatedUser.getProjectPreference().equals("ngo")) {
+		        	ngoRadio.setValue(true);
+		            currentModelType = ProjectModelType.NGO;
+		        } else if (authenticatedUser.getProjectPreference().equals("fnd")) {
+		        	fundingRadio.setValue(true);
+		            currentModelType = ProjectModelType.FUNDING;
+		        } else {
+		        	partnerRadio.setValue(true);
+		            currentModelType = ProjectModelType.LOCAL_PARTNER;
+		        }
+			}
+		});
 
         final HTML headLabel = new HTML("&nbsp;&nbsp;" + I18N.CONSTANTS.projectTypeFilter() + ": ");
         headLabel.addStyleName("flexibility-element-label");
@@ -687,22 +720,16 @@
 								else
 								{
 									//Update local store
-									ProjectDTOLight resultProject =(ProjectDTOLight) result.getEntity();
+									ProjectDTOLight resultProject = (ProjectDTOLight)result.getEntity();
 									model.setFavoriteUsers(resultProject.getFavoriteUsers());
 									store.update(model);
 									
 									Notification.show(I18N.CONSTANTS.infoConfirmation(),
                                             I18N.CONSTANTS.projectStarred());
-								 
-																													
-								}
-								
-								
-							}
-                			
+																	
+								}			
+							}	
                 		});
-                    	                    	
-                 
                     }
                 });