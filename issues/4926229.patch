### Eclipse Workspace Patch 1.0
#P sigmah
Index: src/main/java/org/sigmah/client/page/project/logframe/ProjectLogFramePresenter.java
===================================================================
--- src/main/java/org/sigmah/client/page/project/logframe/ProjectLogFramePresenter.java	(revision 1593)
+++ src/main/java/org/sigmah/client/page/project/logframe/ProjectLogFramePresenter.java	(working copy)
@@ -88,6 +88,8 @@
 
 	private boolean logFrameUpdated;
 
+	private boolean logFramePaste = false;
+
 	/**
 	 * The main project presenter.
 	 */
@@ -258,7 +260,46 @@
 			public void handleEvent(BaseEvent be) {
 				logFrameIdCopySource = logFrame.getId();
 				view.getPasteButton().setEnabled(isEditable() && currentProjectDTO.getCurrentAmendment() == null);
+					// Logs the modified log frame.
+				if (Log.isDebugEnabled()) {
+					Log.debug("[handleEvent] Merges the log frame : \n" + logFrame.toString());
+				}
 
+				// Sends the merge action to the server.
+				dispatcher.execute(new UpdateLogFrame(logFrame, currentProjectDTO.getId()), new MaskingAsyncMonitor(
+				                view, I18N.CONSTANTS.loading()), new AsyncCallback<LogFrameResult>() {
+
+					@Override
+					public void onFailure(Throwable e) {
+
+						// Informs of the error.
+						Log.error("[execute] Error when saving the log frame.", e);
+						MessageBox.alert(I18N.CONSTANTS.save(), I18N.CONSTANTS.saveError(), null);
+					}
+
+					@Override
+					public void onSuccess(LogFrameResult r) {
+						if (Log.isDebugEnabled()) {
+							Log.debug("[execute] Log frame successfully saved.");
+						}
+
+						// Updates local entities with the new returned log
+						// frame (to get the generated ids).
+						final LogFrameDTO updated = r.getLogFrame();
+						currentProjectDTO.setLogFrameDTO(updated);
+						view.getLogFrameGrid().updateLogFrame(updated);
+						logFrame = updated;
+
+						// Informs of the success.
+						Notification.show(I18N.CONSTANTS.infoConfirmation(), I18N.CONSTANTS.saveConfirm());
+						logFrameUpdated = false;
+						view.getSaveButton().setEnabled(false);
+
+						// broadcast an indicator change event to be safe
+						eventBus.fireEvent(new IndicatorEvent(IndicatorEvent.CHANGED, ProjectLogFramePresenter.this));
+					}
+					});
+
 				Notification.show(I18N.CONSTANTS.copy(), I18N.CONSTANTS.logFrameCopied());
 			}
 		});
@@ -290,7 +331,8 @@
 							public void onSuccess(LogFrameDTO result) {
 								logFrame = result;
 								currentProjectDTO.setLogFrameDTO(result);
-
+								logFramePaste = true;
+	
 								fillAndInit();
 								Notification.show(I18N.CONSTANTS.paste(), I18N.CONSTANTS.logFramePasted());
 							}
@@ -348,11 +390,12 @@
 		}
 
 		// Default buttons states.
-		view.getSaveButton().setEnabled(false);
+		view.getSaveButton().setEnabled(logFramePaste);
+		logFramePaste = false;
 		view.getCopyButton().setEnabled(true);
 		view.getPasteButton()
 		                .setEnabled(isEditable() && logFrameIdCopySource != null
 		                                && currentProjectDTO.getCurrentAmendment() == null);
-	}
+	} 
 
 }
