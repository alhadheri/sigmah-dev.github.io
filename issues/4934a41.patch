Index: sigmah/src/main/java/org/sigmah/client/page/project/details/ProjectDetailsView.java
===================================================================
--- sigmah/src/main/java/org/sigmah/client/page/project/details/ProjectDetailsView.java	(revision 1561)
+++ sigmah/src/main/java/org/sigmah/client/page/project/details/ProjectDetailsView.java	(working copy)
@@ -18,6 +18,8 @@
 
     // Toolbar buttons.
     private Button saveButton;
+    private Button foldButton;
+    private Button unfoldButton;
 
     /**
      * Builds the details main panel.
@@ -57,6 +59,13 @@
         // Save button.
         saveButton = new Button(I18N.CONSTANTS.save(), IconImageBundle.ICONS.save());
         saveButton.setEnabled(false);
+        
+        foldButton = new Button(I18N.CONSTANTS.fold());
+        foldButton.setEnabled(true);
+        
+        unfoldButton = new Button(I18N.CONSTANTS.unfold());
+        unfoldButton.setEnabled(true);
+        
      
         // Actions toolbar.
         final ToolBar toolBar = new ToolBar();
@@ -64,15 +73,24 @@
         toolBar.setBorders(false);
 
         toolBar.add(saveButton);
+        toolBar.add(foldButton);
+        toolBar.add(unfoldButton);
         toolBar.add(new FillToolItem());
 
         return toolBar;
     }
-
+    
+    public Button getFoldButton(){
+    	return foldButton;
+    }
+    
+    public Button getUnfoldButton(){
+    	return unfoldButton;
+    }
+    
     public Button getSaveButton() {
         return saveButton;
     }
-
   
 	public ContentPanel getMainPanel() {
         return this;
Index: sigmah/src/main/java/org/sigmah/client/page/project/details/ProjectDetailsPresenter.java
===================================================================
--- sigmah/src/main/java/org/sigmah/client/page/project/details/ProjectDetailsPresenter.java	(revision 1561)
+++ sigmah/src/main/java/org/sigmah/client/page/project/details/ProjectDetailsPresenter.java	(working copy)
@@ -62,6 +62,8 @@
 	public static abstract class View extends ContentPanel {
 
 		public abstract Button getSaveButton();
+		public abstract Button getFoldButton();
+		public abstract Button getUnfoldButton();
 
 		public abstract ContentPanel getMainPanel();
 	}
@@ -91,6 +93,11 @@
 	 * List of values changes.
 	 */
 	private ArrayList<ValueEvent> valueChanges = new ArrayList<ValueEvent>();
+	
+	/**
+	 * List of FieldGroups
+	 */
+	private ArrayList<FieldSet> listOfFieldsets = new ArrayList<FieldSet>();
 
 	/**
 	 * The counter before the main panel is unmasked.
@@ -152,7 +159,25 @@
 	 * Initializes the presenter.
 	 */
 	private void addListeners() {
-
+		//Fold Button
+		view.getFoldButton().addListener(Events.Select, new Listener<ButtonEvent>(){
+			@Override
+			public void handleEvent(ButtonEvent be){
+				for(FieldSet f : listOfFieldsets){
+					f.collapse();
+				}
+			}
+		});
+		//Unfold Button
+		view.getUnfoldButton().addListener(Events.Select, new Listener<ButtonEvent>(){
+			@Override
+			public void handleEvent(ButtonEvent be){
+				for(FieldSet f : listOfFieldsets){
+					f.expand();
+				}
+			}
+		});
+		
 		// Save action.
 		view.getSaveButton().addListener(Events.Select, new Listener<ButtonEvent>() {
 
@@ -253,6 +278,9 @@
 				// Creates the fieldset and positions it.
 				final FieldSet formPanel = (FieldSet) groupLayout.getWidget();
 				gridLayout.setWidget(groupLayout.getRow(), groupLayout.getColumn(), formPanel);
+				
+				listOfFieldsets.add(formPanel);//Store it in a list to Fold/Unfold all of them as and when necessary 
+				
 
 				// For each constraint in the current layout group.
 				if (groupLayout.getLayoutConstraintsDTO() != null) {
Index: sigmah/src/main/java/org/sigmah/client/page/project/dashboard/ProjectDashboardPresenter.java
===================================================================
--- sigmah/src/main/java/org/sigmah/client/page/project/dashboard/ProjectDashboardPresenter.java	(revision 1561)
+++ sigmah/src/main/java/org/sigmah/client/page/project/dashboard/ProjectDashboardPresenter.java	(working copy)
@@ -137,6 +137,10 @@
 		public abstract Button getButtonActivatePhase();
 
 		public abstract Button getButtonPhaseGuide();
+		
+		public abstract Button getButtonFold();
+
+		public abstract Button getButtonUnfold();
 
 		public abstract TabPanel getTabPanelProject();
 
@@ -183,6 +187,12 @@
 	 * List of values changes.
 	 */
 	private ArrayList<ValueEvent> valueChanges = new ArrayList<ValueEvent>();
+	
+	/**
+	 * List of fieldGroups
+	 */
+	private ArrayList<FieldSet> listOfFieldsets = new ArrayList<FieldSet>();
+	
 	/**
 	 * Mapping between phases models ids and tabs items (to quickly get a tab).
 	 */
@@ -595,6 +605,8 @@
 			// Creates the fieldset and positions it.
 			final FieldSet formPanel = (FieldSet) groupDTO.getWidget();
 			layoutGrid.setWidget(groupDTO.getRow(), groupDTO.getColumn(), formPanel);
+			
+			listOfFieldsets.add(formPanel);
 
 			// For each constraint in the current layout group.
 			for (final LayoutConstraintDTO constraintDTO : groupDTO.getLayoutConstraintsDTO()) {
@@ -709,6 +721,34 @@
 			}
 
 		}
+		
+		// Add Fold Unfold event handlers
+		// --
+		// -- ACTION :: FOLD
+		// --
+		view.getButtonFold().removeAllListeners();
+		view.getButtonFold().addListener(Events.Select, new Listener<BaseEvent>(){
+			@Override
+			public void handleEvent(BaseEvent be){
+				for(FieldSet f : listOfFieldsets){
+					f.collapse();
+				}
+			}
+		});
+		
+		// --
+		// -- ACTION :: UNFOLD
+		// --
+		view.getButtonUnfold().removeAllListeners();
+		view.getButtonUnfold().addListener(Events.Select, new Listener<BaseEvent>(){
+			@Override
+			public void handleEvent(BaseEvent be){
+				for(FieldSet f : listOfFieldsets){
+					f.expand();
+				}
+			}
+		});
+		
 
 		// View layouts update.
 		// FIXME: This should be done by Ext, not be the developer!
@@ -919,6 +959,7 @@
 			view.getButtonPhaseGuide().setEnabled(false);
 			view.getButtonPhaseGuide().setTitle(I18N.CONSTANTS.projectPhaseGuideUnavailable());
 		}
+		
 	}
 
 	/**
Index: sigmah/src/main/java/org/sigmah/client/page/project/dashboard/ProjectDashboardView.java
===================================================================
--- sigmah/src/main/java/org/sigmah/client/page/project/dashboard/ProjectDashboardView.java	(revision 1561)
+++ sigmah/src/main/java/org/sigmah/client/page/project/dashboard/ProjectDashboardView.java	(working copy)
@@ -95,6 +95,9 @@
 	private Button buttonSavePhase;
 	private Button buttonActivatePhase;
 	private Button buttonPhaseGuide;
+	
+	private Button buttonFold;
+	private Button buttonUnfold;
 
 	private ContentPanel panelFinancialProjects;
 	private ContentPanel panelLocalProjects;
@@ -152,15 +155,25 @@
 		buttonSavePhase = new Button(I18N.CONSTANTS.projectSavePhaseButton(), IconImageBundle.ICONS.save());
 		buttonActivatePhase = new Button(I18N.CONSTANTS.projectClosePhaseButton(), IconImageBundle.ICONS.activate());
 		buttonPhaseGuide = new Button(I18N.CONSTANTS.projectPhaseGuideHeader(), IconImageBundle.ICONS.info());
+		
+		buttonFold = new Button(I18N.CONSTANTS.fold());
+		buttonUnfold = new Button(I18N.CONSTANTS.unfold());
 
 		buttonActivatePhase.setEnabled(false);
 		buttonSavePhase.setEnabled(false);
 		buttonPhaseGuide.setEnabled(false);
+		
+		buttonFold.setEnabled(true);
+		buttonUnfold.setEnabled(true);
 
 		toolBar.add(buttonActivatePhase);
 		toolBar.add(new SeparatorToolItem());
 		toolBar.add(buttonSavePhase);
 		toolBar.add(new SeparatorToolItem());
+		toolBar.add(buttonFold);
+		toolBar.add(new SeparatorToolItem());
+		toolBar.add(buttonUnfold);
+		toolBar.add(new SeparatorToolItem());		
 		toolBar.add(buttonPhaseGuide);
 
 		// Tab item main panel
@@ -291,6 +304,17 @@
 	public Button getButtonSavePhase() {
 		return buttonSavePhase;
 	}
+	
+	@Override
+	public Button getButtonFold(){
+		return buttonFold;
+	}
+	
+	@Override
+	public Button getButtonUnfold(){
+		return buttonUnfold;
+	}
+	
 
 	@Override
 	public Grid<FlexibleElementDTO> getGridRequiredElements() {
Index: sigmah/src/main/java/org/sigmah/client/i18n/UIConstants.properties
===================================================================
--- sigmah/src/main/java/org/sigmah/client/i18n/UIConstants.properties	(revision 1561)
+++ sigmah/src/main/java/org/sigmah/client/i18n/UIConstants.properties	(working copy)
@@ -2389,3 +2389,6 @@
 categoryNotMapped = Not in any Category
 
 
+#Name for the Fold/Unfold Buttons in Project Details and Phases Page
+fold = Fold
+unfold = Unfold
\ No newline at end of file
